name: Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release
  BUILD_PATH: ${{ github.workspace}}/build
  BASE_TAG: ci-${{ github.run_id }}

jobs:
  check-format:
    name: Formatting Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        path:
          - 'benchmark'
          - 'include'
          - 'src'
          - 'test'
    steps:
    - uses: actions/checkout@v3

    - name: Run clang-format style check for C/C++ programs.
      uses: jidicula/clang-format-action@v4.10.2
      with:
        clang-format-version: '15'
        check-path: ${{ matrix.path }}

  build-image:
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.generate_docker_image_name.outputs.image_name}}
    steps:
    - uses: actions/checkout@v3

    - uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate Docker Image name
      id: generate_docker_image_name
      run: |
        echo "BASE_TAG=${{env.BASE_TAG}}" >> $GITHUB_ENV
        IMAGE_NAME="ghcr.io/akmaru/cpp-template:base-${{env.BASE_TAG}}"
        echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT

    - name: Build Docker Image
      run: docker compose build base

    - name: Push Docker Image
      run:  docker compose push base

  build:
    needs: build-image
    runs-on: ubuntu-latest
    container: 
      image: ${{ needs.build-image.outputs.image_name }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.github_token }}

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      run: cmake -B ${{env.BUILD_PATH}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -GNinja

    - name: Build
      run: |
        ls ${{env.BUILD_PATH}}
        cmake --build ${{env.BUILD_PATH}} --config ${{env.BUILD_TYPE}}

    - name: Test
      run: ctest --test-dir ${{env.BUILD_PATH}} -C ${{env.BUILD_TYPE}}

    - name: Linter
      run: find . -type f -name "*.h" -not -path '${{env.BUILD_PATH}}/*' -or -name "*.cc" -not -path '${{env.BUILD_PATH}}/*' | xargs clang-tidy -p ${{env.BUILD_PATH}}

    - name: Benchmark
      run: ${{env.BUILD_PATH}}/bin/cpp-template_benchmark
