variables:
  GIT_SUBMODULE_STRATEGY: recursive
  PIPELINE_IMAGE_TAG: ci-${CI_PIPELINE_ID}
  PIPELINE_IMAGE_NAME: ${CI_REGISTRY_IMAGE}:base-${PIPELINE_IMAGE_TAG}
  RUNNER_TAG_DOCKER: gitlab-org-docker

stages:
  - docker
  - build
  - lint
  - test

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "web"

default:
  image: ${PIPELINE_IMAGE_NAME}
  tags:
    - ${RUNNER_TAG_DOCKER}


#
# Docker
#
docker:build:
  stage: docker
  image: docker:23.0.6-dind
  services:
    - docker:23.0.6-dind
  before_script:
    - echo ${CI_REGISTRY_PASSWORD} | docker login -u ${CI_REGISTRY_USER} --password-stdin ${CI_REGISTRY}
    - echo "IMAGE_URL=${CI_REGISTRY_IMAGE}" >> .env
    - echo "BASE_TAG=${PIPELINE_IMAGE_TAG}" >> .env
  script:
    - docker compose build base
    - docker compose push base


#
# Build
#
build:release:
  stage: build
  needs: 
    - job: docker:build
  script:
    - cmake -B build -GNinja -DCMAKE_BUILD_TYPE=Release
    - cmake --build build --config Release
  artifacts:
    paths:
      - build
    expire_in: 1h


#
# Lint
#
.lint_base:
  stage: lint
  needs:
    - job: build:release
      artifacts: true
     
lint:clang-format:
  extends: .lint_base
  script:
    - ./scripts/lint/check_clang_format.sh

lint:clang-tidy:
  extends: .lint_base
  script:
    - ./scripts/lint/check_clang_tidy.sh build

lint:cmake-format:
  extends: .lint_base
  script:
    - ./scripts/lint/check_cmake_format.sh


#
# Test
#
test:release:
  stage: test
  needs: 
    - job: build:release
      artifacts: true
  script:
    - ctest --test-dir build -C Release
  artifacts:
    paths:
      - build
    expire_in: 1h 
